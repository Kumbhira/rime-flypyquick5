# flypy_quick5.custom.yaml
# 在 flypy_quick5 中啟用 latex 輸入的配置 (修正版)

patch:
  # 1. 將 `\` 符號加入 speller 的字母表，這樣才能夠輸入
  speller/alphabet: 'zyxwvutsrqponmlkjihgfedcba''\\'

  # 2. 引用 latex.schema.yaml 中定義好的 translator
  # 並加上觸發符號等設定
  translator_latex:
    __include: latex.schema:/translator
    tag: translator_latex
    prefix: '\\'
    suffix: ' '
    tips: 'L'

  # 3. 將 latex translator 加入到翻譯器列表中
  # 注意：這裡是「覆蓋」整個列表，需要把原有的翻譯器也一併列出
  engine/translators:
    - punct_translator
    - table_translator@translator_cangjie5
    - table_translator@translator_latex # 新增的 latex 翻譯器
    - script_translator

  # 4. 將 latex segmentor 加入到分詞器列表中
  # 注意：這裡是「覆蓋」整個列表，需要把原有的分詞器也一併列出
  engine/segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@translator_cangjie5
    - affix_segmentor@translator_latex # 新增的 latex 分詞器
    - punct_segmentor
    - fallback_segmentor

  # 自定義符號
  # 導入預設的符號表
  punctuator/import_preset: symbols
  # 添加自定義符號
  punctuator/symbols:
    '/nm0': [ 〇, 零, ₀, ⁰, ⓪, ⓿ , ０]
    '/nm1': [ 一, 壹, ₁, ¹, Ⅰ, ⅰ, ①, ➀, ❶, ➊, ⓵, ⑴, ⒈, １, ㊀, ㈠, 弌, 壱, 幺, ㆒ ]
    '/nm2': [ 二, 貳, ₂, ², Ⅱ, ⅱ, ②, ➁, ❷, ➋, ⓶, ⑵, ⒉, ２, ㊁, ㈡, 弍, 弐, 貮, 㒃, 㒳, 兩, 倆, ㆓]
    '/nm3': [ 三, 叄, ₃, ³, Ⅲ, ⅲ, ③, ➂, ❸, ➌, ⓷, ⑶, ⒊, ３, ㊂, ㈢, 參, 参, 叁, 弎, 仨, ㆔]
    '/nm4': [ 四, 肆, ₄, ⁴, Ⅳ, ⅳ, ④, ➃, ❹, ➍, ⓸, ⑷, ⒋, ４, ㊃, ㈣, 亖]
    '/nm5': [ 五, 伍, ₅, ⁵, Ⅴ, ⅴ, ⑤, ➄, ❺, ➎, ⓹, ⑸, ⒌, ５, ㊄, ㈤, 㐅, 㠪, 𠄡 ]
    '/nm6': [ 六, 陸, ₆, ⁶, Ⅵ, ⅵ, ⑥, ➅, ❻, ➏, ⓺, ⑹, ⒍, ６, ㊅, ㈥, ↅ]
    '/nm7': [ 七, 柒, ₇, ⁷, Ⅶ, ⅶ, ⑦, ➆, ❼, ➐, ⓻, ⑺, ⒎, ７, ㊆, ㈦, 漆]
    '/nm8': [ 八, 捌, ₈, ⁸, Ⅷ, ⅷ, ⑧, ➇, ❽, ➑, ⓼, ⑻, ⒏, ８, ㊇, ㈧ ]
    '/nm9': [ 九, 玖, ₉, ⁹, Ⅸ, ⅸ, ⑨, ➈, ❾, ➒, ⓽, ⑼, ⒐, ９, ㊈, ㈨ ]
    '/nm10': [ 十, 拾, ₁₀, ¹⁰, Ⅹ, ⅹ, ⑩, ➉, ❿, ➓, ⓾, ⑽, ⒑, １０, ㊉, ㈩, 什 ]

  # 5. 設定觸發規則，當輸入以 \ 開頭時，啟用 latex translator
  recognizer:
    patterns:
        translator_latex: "^\\\\[a-zA-Z^_]+$"
        punct: '^/(nm([0-9]|10)|[A-Za-z]+)$'
        translator_cangjie5: "`c[a-z]*'?$"

